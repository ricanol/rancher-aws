# Export Terraform variable values to an Ansible var_file
resource "local_file" "tf_ansible_vars" {
  content = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.

    ip_rancher: ${aws_instance.rancher_server.public_ip}
    domain: ${aws_route53_record.dns_rancher_server.name}
    user: ${local.node_username}
    key_path: ../aws/id_rsa
    DOC
  filename = "../ansible/tf_ansible_vars_file.yml"

  depends_on = [ null_resource.move_config_k8s ]
}

# Creat inventory ansible
resource "local_file" "hosts" {
  content = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.

    [rancher-server]
    ${aws_instance.rancher_server.public_ip}

    DOC
  filename = "../ansible/hosts"

  depends_on = [ null_resource.move_config_k8s ]
}

#Install ansible locally e execute playbook to install k8s files
resource "null_resource" "install_ansible_locally" {
    #provisioner "local-exec" {
    #    command = "sudo apt update && sudo apt install python3 -y && sudo apt install ansible -y && echo Done!"
    #}
    provisioner "local-exec" {
        command = "sudo ssh-keyscan ${aws_instance.rancher_server.public_ip}"
    }
    provisioner "local-exec" {
        command = "sudo ansible-playbook ../ansible/main.yml -i ../ansible/hosts"
    }

    depends_on = [ local_file.tf_ansible_vars ]

}